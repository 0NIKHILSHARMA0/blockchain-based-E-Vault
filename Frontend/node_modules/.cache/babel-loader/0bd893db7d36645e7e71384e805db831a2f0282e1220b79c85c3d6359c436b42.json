{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayan\\\\Downloads\\\\BlockChain-Evault\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Upload from \"./artifacts/contracts/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    const loadProvider = async () => {\n      if (window.ethereum) {\n        try {\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          let contractAddress = window.ethereum;\n          if (typeof window.ethereum !== 'undefined') {\n            // MetaMask is installed\n            // contractAddress = \"0x998333ed612A1135411C7e982a5d425327Ef2c55\";\n\n            // Get the current selected address from MetaMask\n            const selectedAddress = window.ethereum.selectedAddress;\n            if (selectedAddress) {\n              console.log(`Contract Address: ${contractAddress}`);\n              console.log(`Selected Address in MetaMask: ${selectedAddress}`);\n            } else {\n              console.error(\"No Ethereum address is currently selected in MetaMask.\");\n            }\n          } else {\n            console.error(\"MetaMask is not installed.\");\n          }\n          const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n          setContract(contract);\n          setProvider(provider);\n        } catch (error) {\n          console.error(\"Error loading provider:\", error);\n        }\n      } else {\n        console.error(\"Metamask is not installed or not connected\");\n      }\n    };\n    if (!provider) {\n      loadProvider();\n    }\n    window.ethereum.on(\"chainChanged\", () => {\n      window.location.reload();\n    });\n    window.ethereum.on(\"accountsChanged\", () => {\n      window.location.reload();\n    });\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!modalOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"share\",\n      onClick: () => setModalOpen(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setModalOpen: setModalOpen,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"Innovators World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg bg2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg bg3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: [\"Account: \", account ? account : \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        account: account,\n        provider: provider,\n        contract: contract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        contract: contract,\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yGCxXQ87YH7dBPtrsE7SNVrz99c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Upload","useState","useEffect","FileUpload","Display","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ethers","require","App","_s","account","setAccount","contract","setContract","provider","setProvider","modalOpen","setModalOpen","loadProvider","window","ethereum","providers","Web3Provider","signer","getSigner","address","getAddress","contractAddress","selectedAddress","console","log","error","Contract","abi","on","location","reload","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/mayan/Downloads/BlockChain-Evault/Frontend/src/App.js"],"sourcesContent":["import Upload from \"./artifacts/contracts/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\n\nconst ethers = require(\"ethers\");\n\nfunction App() {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      if (window.ethereum) {\n        try {\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          let contractAddress = window.ethereum;\n          \n          if (typeof window.ethereum !== 'undefined') {\n            // MetaMask is installed\n            // contractAddress = \"0x998333ed612A1135411C7e982a5d425327Ef2c55\";\n          \n            // Get the current selected address from MetaMask\n            const selectedAddress = window.ethereum.selectedAddress;\n          \n            if (selectedAddress) {\n              console.log(`Contract Address: ${contractAddress}`);\n              console.log(`Selected Address in MetaMask: ${selectedAddress}`);\n            } else {\n              console.error(\"No Ethereum address is currently selected in MetaMask.\");\n            }\n          } else {\n            console.error(\"MetaMask is not installed.\");\n          }\n    \n          const contract = new ethers.Contract(\n            contractAddress,\n            Upload.abi,\n            signer\n          );\n    \n          setContract(contract);\n          setProvider(provider);\n        } catch (error) {\n          console.error(\"Error loading provider:\", error);\n        }\n      } else {\n        console.error(\"Metamask is not installed or not connected\");\n      }\n    };\n\n    if (!provider) {\n      loadProvider();\n    }\n\n    window.ethereum.on(\"chainChanged\", () => {\n      window.location.reload();\n    });\n\n    window.ethereum.on(\"accountsChanged\", () => {\n      window.location.reload();\n    });\n  }, [provider]);\n\n  return (\n    <>\n      {!modalOpen && (\n        <button className=\"share\" onClick={() => setModalOpen(true)}>\n          Share\n        </button>\n      )}\n      {modalOpen && (\n        <Modal setModalOpen={setModalOpen} contract={contract} />\n      )}\n\n      <div className=\"App\">\n        <h1 style={{ color: \"black\" }}>Innovators World</h1>\n        <div className=\"bg\"></div>\n        <div className=\"bg bg2\"></div>\n        <div className=\"bg bg3\"></div>\n\n        <p style={{ color: \"white\" }}>\n          Account: {account ? account : \"Not connected\"}\n        </p>\n        <FileUpload account={account} provider={provider} contract={contract} />\n        <Display contract={contract} account={account} />\n      </div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}